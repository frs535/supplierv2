version: '3.8'
services:

  api:
    #    image: arf535/supplier.server:latest
    platform: linux/amd64
    environment:
      - DB_URL=mongodb://mongodbuser:Zs24pS3IrU8rNRWAuZtWUx@95.216.198.114:27017/supplier4?authSource=admin
      - PORT=5001
      - JWT_SECRET=pQe%06Wl8a05
    networks:
      - network
    build:
      context: ./Server
      dockerfile: Dockerfile.prod
    container_name: supplier.server
    restart: unless-stopped
    volumes:
      - server_node_modules:/app/node_modules
      - photo:/app/public/assets
    stdin_open: true
    tty: true

  client:
    #    image: arf535/supplier.client:latest
    platform: linux/amd64
    environment:
      - CHOKIDAR_USEPOLLING=true
      - BASE_ADRESS="http://localhost"
    networks:
      - network
    depends_on:
      - api
    build:
      context: ./Client
      dockerfile: Dockerfile.prod
    container_name: supplier.client
    restart: unless-stopped
    volumes:
      - web-root:/usr/share/nginx/html
      - web-config:/etc/nginx/conf.d
    stdin_open: true
    tty: true

  webserver:
    #image: nginx:mainline-alpine
    platform: linux
    container_name: webserver
    restart: unless-stopped
    volumes:
      - web-root:/usr/share/nginx/html
      - web-config:/etc/nginx/conf.d
      - photo:/var/www/app/assets
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    build:
      context: ./nginx
      dockerfile: Dockerfile
    depends_on:
      - api
      - client
    networks:
      - network
    ports:
      - "80:80"
      - "443:443"

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/usr/share/nginx/html
    depends_on:
      - webserver
      - api
      - client
    networks:
      - network
#    command: certonly --webroot --webroot-path=/usr/share/nginx/html/ --email arf@deskit.ru --agree-tos --no-eff-email --staging -d dev.deskit.ru  -d www.dev.deskit.ru

volumes:
  certbot-etc:
  certbot-var:
  web-config:
  web-root:
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: ~/dhparam/
      o: bind
  server_node_modules:
  photo:

networks:
  network:
    driver: bridge